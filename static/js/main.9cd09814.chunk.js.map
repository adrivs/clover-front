{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Info.js","components/layout/Footer.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","actions/event.js","components/events/EventForm.js","components/profile-view/Profile.js","components/dashboard/Dashboard.js","components/profile/CreateProfile.js","components/profile/EditProfile.js","components/routing/PrivateRoute.js","components/profiles/Profiles.js","components/events/EventItem.js","components/events/Events.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/event.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setAlert","msg","alertType","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","localStorage","get","sent","data","t0","stop","_x","apply","this","arguments","connect","state","auth","logout","isAuthenticated","loading","authLinks","react_default","createElement","className","react_router_dom","to","onClick","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react","Info","props","title","text","Footer","react_router","layout_Info","data-ride","class","href","role","data-slide","aria-hidden","layout_Footer","register","_ref2","name","email","password","_ref3","_callee2","config","body","errors","_context2","Content-Type","JSON","stringify","post","response","forEach","error","_x2","_useState","useState","password2","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","value","onSubmit","preventDefault","login","_ref4","_callee3","_context3","_x3","required","minLength","alerts","alert","length","map","key","concat","getCurrentProfile","createProfile","history","edit","undefined","Content-type","push","statusText","status","getEvents","addEvent","_ref5","_callee5","_res","_context5","_x5","date","location","language","profile","getProfileById","userId","deleteAccount","window","confirm","delete","_ref$profile","useEffect","user","_id","bio","languages","join","event","events","profile_view_Profile","events_EventForm","console","log","withRouter","cols","rows","Component","component","_ref$auth","rest","objectWithoutProperties","assign","render","getProfiles","_callee4","_context4","_x4","profiles","joinEvent","put","usersAttending","takeOffEvent","deleteEvent","_ref$event","getLatLang","setViewport","viewport","width","innerWidth","height","latitude","longitude","zoom","latLon","lat","lon","parseFloat","abrupt","message","dist_default","format","esm","mapboxApiAccessToken","eventFiltered","searchedEvent","setEvent","filteredEvents","filter","ev","toLowerCase","includes","placeholder","handleSearch","events_EventItem","initialState","getItem","combineReducers","action","toConsumableArray","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","exact","path","Landing","layout_Alert","Register","Login","routing_PrivateRoute","Profiles","Profile","Dashboard","CreateProfile","EditProfile","Events","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9cd09814.chunk.js","sourcesContent":["import uuid from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType) => dispatch => {\r\n    const id = uuid.v4();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 3000);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_EVENTS = 'GET_EVENTS';\r\nexport const GET_EVENT = 'GET_EVENT';\r\nexport const EVENT_ERROR = 'EVENT_ERROR';\r\nexport const UPDATE_USERS_ATTENDING = 'UPDATE_USERS_ATTENDING';\r\nexport const ADD_EVENT = 'ADD_EVENT';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/auth');\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n    }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/users', body, config);\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/auth', body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated }, logout, loading }) => {\r\n    const authLinks = (\r\n        <div className='collapse navbar-collapse' id='navbarNav'>\r\n            <ul className='navbar-nav logs'>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to='/events'>\r\n                        <span>Events</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to='/dashboard'>\r\n                        <span>Dashboard</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' onClick={logout}>\r\n                        <span>Logout</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <div className='collapse navbar-collapse' id='navbarNav'>\r\n            <ul className='navbar-nav logs'>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to='/register'>\r\n                        <span>Register</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to='/login'>\r\n                        <span>Login</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <nav className='navbar navbar-expand-lg navbar-dark'>\r\n                <div>\r\n                    <Link className='navbar-brand' to='/'>\r\n                        <span className='brand-title'>Clover</span>\r\n                    </Link>\r\n                    <button\r\n                        className='navbar-toggler'\r\n                        type='button'\r\n                        data-toggle='collapse'\r\n                        data-target='#navbarNav'\r\n                        aria-controls='navbarNav'\r\n                        aria-expanded='false'\r\n                        aria-label='Toggle navigation'\r\n                    >\r\n                        <span className='navbar-toggler-icon' />\r\n                    </button>\r\n                </div>\r\n                {!loading && (\r\n                    <Fragment>\r\n                        {isAuthenticated ? authLinks : guestLinks}\r\n                    </Fragment>\r\n                )}\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logout }\r\n)(Navbar);\r\n","import React from 'react';\r\n\r\nconst Info = props => {\r\n    return (\r\n        <div className='info-section-landing'>\r\n            <h2>{props.title}</h2>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <p className='rights'>&#169;2019 CLOVER, ALL RIGHTS RESERVED</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Info from './Info';\r\nimport Footer from './Footer';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='first-section-landing'>\r\n                <div className='container main-text-landing'>\r\n                    <h1>\r\n                        Are you new to your city and do <br /> not know anyone?\r\n                    </h1>\r\n                    <p>Meet new people who speaks your same language!</p>\r\n                </div>\r\n            </div>\r\n            <div className=' second-section-landing'>\r\n                <Info\r\n                    title={'Create your account'}\r\n                    text={\r\n                        'It will take less than a minute to have your account'\r\n                    }\r\n                />\r\n                <Info\r\n                    title={'Fill your profile'}\r\n                    text={\r\n                        'Introduce the languages that you talk and where you are living'\r\n                    }\r\n                />\r\n                <Info\r\n                    title={'Find or create an event'}\r\n                    text={\r\n                        'Find or create an event in your city and you will meet new people'\r\n                    }\r\n                />\r\n            </div>\r\n            <div\r\n                id='carouselExampleControls'\r\n                className='carousel slide carousel-opinions '\r\n                data-ride='carousel'\r\n            >\r\n                <h2>Opinions</h2>\r\n                <div className='carousel-inner container'>\r\n                    <div className='carousel-item active'>\r\n                        <div class='card'>\r\n                            <div class='card-body'>\r\n                                <blockquote class='blockquote mb-0'>\r\n                                    <p>\r\n                                        This web is so good. I have made a lot\r\n                                        of new friends and I have improved my\r\n                                        english. I recommend it!\r\n                                    </p>\r\n                                    <footer class='blockquote-footer'>\r\n                                        <cite title='Source Title'>\r\n                                            John Doe\r\n                                        </cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='carousel-item'>\r\n                        <div class='card'>\r\n                            <div class='card-body'>\r\n                                <blockquote class='blockquote mb-0'>\r\n                                    <p>\r\n                                        The platform is awesome. I can visit new\r\n                                        places with people that I don't know and\r\n                                        communicate in the same language.\r\n                                    </p>\r\n                                    <footer class='blockquote-footer'>\r\n                                        <cite title='Source Title'>\r\n                                            Winston Smith\r\n                                        </cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='carousel-item'>\r\n                        <div class='card'>\r\n                            <div class='card-body'>\r\n                                <blockquote class='blockquote mb-0'>\r\n                                    <p>\r\n                                        I have to say that I have met my new\r\n                                        girlfriend because of this web. I'm so\r\n                                        happy with this, use it!\r\n                                    </p>\r\n                                    <footer class='blockquote-footer'>\r\n                                        <cite title='Source Title'>\r\n                                            Fulano Mengano\r\n                                        </cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a\r\n                    className='carousel-control-prev '\r\n                    href='#carouselExampleControls'\r\n                    role='button'\r\n                    data-slide='prev'\r\n                >\r\n                    <span\r\n                        className='carousel-control-prev-icon'\r\n                        aria-hidden='true'\r\n                    />\r\n                    <span className='sr-only'>Previous</span>\r\n                </a>\r\n                <a\r\n                    className='carousel-control-next'\r\n                    href='#carouselExampleControls'\r\n                    role='button'\r\n                    data-slide='next'\r\n                >\r\n                    <span\r\n                        className='carousel-control-next-icon'\r\n                        aria-hidden='true'\r\n                    />\r\n                    <span className='sr-only'>Next</span>\r\n                </a>\r\n            </div>\r\n            <footer>\r\n                <Footer />\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport '../../App.css';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger');\r\n        } else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container register-container'>\r\n                <br />\r\n                <h2>Create an account</h2>\r\n                <br />\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <label>Full Name</label>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Email address</label>\r\n                        <input\r\n                            type='email'\r\n                            className='form-control'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Password</label>\r\n                        <input\r\n                            type='password'\r\n                            className='form-control'\r\n                            name='password'\r\n                            id='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Confirm your password</label>\r\n                        <input\r\n                            type='password'\r\n                            className='form-control'\r\n                            name='password2'\r\n                            id='password2'\r\n                            value={password2}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-primary btn-clover'\r\n                    >\r\n                        Create\r\n                    </button>\r\n                </form>\r\n                <br />\r\n                <p>\r\n                    Already have an account? <Link to='/login'>Log In</Link>\r\n                </p>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setAlert, register }\r\n)(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\nimport '../../App.css';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        login(email, password);\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/events' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container register-container'>\r\n                <br />\r\n                <h2>Log In</h2>\r\n                <br />\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <label>Email address</label>\r\n                        <input\r\n                            type='email'\r\n                            className='form-control'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Password</label>\r\n                        <input\r\n                            type='password'\r\n                            className='form-control'\r\n                            name='password'\r\n                            id='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                            required\r\n                            minLength='6'\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-primary btn-clover'\r\n                    >\r\n                        Log In\r\n                    </button>\r\n                </form>\r\n                <br />\r\n                <p>\r\n                    Don't have an account? <Link to='/register'>Sign In</Link>\r\n                </p>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login }\r\n)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = ({ alerts }) =>\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map(alert => (\r\n        <div\r\n            key={alert.id}\r\n            className={`container alert alert-${alert.alertType}`}\r\n        >\r\n            {alert.msg}\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    ACCOUNT_DELETED,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES\r\n} from './types';\r\n\r\n// Get current user's profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n            // payload: {\r\n            //     msg: err.response.statusText,\r\n            //     status: err.response.status\r\n            // }\r\n        });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (\r\n    formData,\r\n    history,\r\n    edit = false\r\n) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.post('profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(\r\n            setAlert(edit ? 'Profile updated' : 'Profile created', 'success')\r\n        );\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete account\r\nexport const deleteAccount = () => async dispatch => {\r\n    if (window.confirm('Are you sure?')) {\r\n        try {\r\n            await axios.delete('/profile');\r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            });\r\n            dispatch({\r\n                type: ACCOUNT_DELETED\r\n            });\r\n\r\n            dispatch(setAlert('Your account has been deleted', 'success'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {\r\n                    msg: err.response.statusText,\r\n                    status: err.response.status\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n\r\n    try {\r\n        const res = await axios.get('/profile');\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/profile/user/${userId}`);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n","import axios from 'axios';\r\nimport { setAlert } from '../actions/alert';\r\nimport {\r\n    GET_EVENTS,\r\n    EVENT_ERROR,\r\n    UPDATE_USERS_ATTENDING,\r\n    ADD_EVENT,\r\n    DELETE_EVENT\r\n} from '../actions/types';\r\n\r\n// Get all events\r\nexport const getEvents = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/events');\r\n        dispatch({\r\n            type: GET_EVENTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n            payload: {\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Join an event\r\nexport const joinEvent = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/events/join/${id}`);\r\n        dispatch({\r\n            type: UPDATE_USERS_ATTENDING,\r\n            payload: { id, usersAttending: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Take off from an event\r\nexport const takeOffEvent = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/events/takeoff/${id}`);\r\n        dispatch({\r\n            type: UPDATE_USERS_ATTENDING,\r\n            payload: { id, usersAttending: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete event\r\nexport const deleteEvent = id => async dispatch => {\r\n    try {\r\n        await axios.delete(`/events/${id}`);\r\n        dispatch({\r\n            type: DELETE_EVENT,\r\n            payload: id\r\n        });\r\n\r\n        dispatch(setAlert('Event deleted', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add event\r\nexport const addEvent = formData => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        const res = await axios.post(`/events/`, formData, config);\r\n        dispatch({\r\n            type: ADD_EVENT,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Event created', 'success'));\r\n\r\n        const _res = await axios.get('/events');\r\n        dispatch({\r\n            type: GET_EVENTS,\r\n            payload: _res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEvent } from '../../actions/event';\r\n\r\nconst EventForm = ({ addEvent }) => {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        date: '',\r\n        location: '',\r\n        language: ''\r\n    });\r\n\r\n    const { title, date, location, language } = formData;\r\n\r\n    const onChange = e => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addEvent(formData);\r\n        setFormData({\r\n            title: '',\r\n            date: '',\r\n            location: '',\r\n            language: ''\r\n        });\r\n    };\r\n    return (\r\n        <div className='container create-event'>\r\n            <h2>Create an event</h2>\r\n            <form className='form' onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <label>Title</label>\r\n                    <input\r\n                        type='text'\r\n                        value={title}\r\n                        name='title'\r\n                        className='form-control'\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Date</label>\r\n                    <input\r\n                        type='datetime-local'\r\n                        value={date}\r\n                        name='date'\r\n                        className='form-control'\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Location</label>\r\n                    <input\r\n                        type='text'\r\n                        value={location}\r\n                        name='location'\r\n                        className='form-control'\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Please use this format (Place, City)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Language</label>\r\n                    <input\r\n                        type='text'\r\n                        value={language}\r\n                        name='language'\r\n                        className='form-control'\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <button type='submit' className='btn btn-sm btn-clover'>\r\n                    <span>Create</span>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nEventForm.propTypes = {\r\n    addEvent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    { addEvent }\r\n)(EventForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileById, deleteAccount } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = ({\r\n    getProfileById,\r\n    deleteAccount,\r\n    profile: { profile, loading },\r\n    auth\r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(profile.user._id);\r\n    }, [getProfileById, profile.user._id]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                <h2>Loading...</h2>\r\n            ) : (\r\n                <div className='container profile-view'>\r\n                    <h2 className='name-profile'>{profile.user.name}</h2>\r\n                    <p className='bio-profile'>{profile.bio}</p>\r\n                    {profile.languages.join(', ')}\r\n                    <p className='location-profile'>{profile.location}</p>\r\n                    {auth.isAuthenticated &&\r\n                        auth.loading === false &&\r\n                        auth.user._id === profile.user._id && (\r\n                            <Link\r\n                                className='btn btn-sm btn-clover'\r\n                                to='/edit-profile'\r\n                            >\r\n                                <span>Edit profile</span>\r\n                            </Link>\r\n                        )}\r\n                    <button\r\n                        className='btn btn-sm btn-danger'\r\n                        onClick={() => deleteAccount()}\r\n                    >\r\n                        Delete account\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProfileById, deleteAccount }\r\n)(Profile);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport { getEvents } from '../../actions/event';\r\nimport EventForm from '../events/EventForm';\r\nimport Profile from '../profile-view/Profile';\r\n\r\nconst Dashboard = ({\r\n    getCurrentProfile,\r\n    auth: { user },\r\n    profile: { profile },\r\n    event: { events },\r\n    loading\r\n}) => {\r\n    /* useEffect(() => {\r\n        getEvents();\r\n    }, [getEvents]); */\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    return loading && profile === null ? (\r\n        <div className='container'>Loading...</div>\r\n    ) : (\r\n        <div className='container'>\r\n            <div>\r\n                {profile !== null ? (\r\n                    <Fragment>\r\n                        <div className=''>\r\n                            <Profile />\r\n                            <EventForm />\r\n                            <div>{console.log(profile.user._id)}</div>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                    <Fragment>\r\n                        You have not yet your profile finished, please do it.{' '}\r\n                        <br />\r\n                        <Link to='/create-profile' className=''>\r\n                            Create Profile\r\n                        </Link>\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n    event: state.event\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getCurrentProfile, getEvents }\r\n)(Dashboard);\r\n","import React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { /*Link */ withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        location: '',\r\n        bio: '',\r\n        languages: []\r\n    });\r\n\r\n    const { location, bio, languages } = formData;\r\n\r\n    const onChange = e => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=' container  profile-container'>\r\n                <h2>Create profile</h2>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='row'>\r\n                        <div className='col-6'>\r\n                            <div className='form-group'>\r\n                                <label>Biography</label> <br />\r\n                                <textarea\r\n                                    required\r\n                                    cols='50'\r\n                                    rows='5'\r\n                                    name='bio'\r\n                                    value={bio}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-6'>\r\n                            <div className='form-group'>\r\n                                <label>City where you live</label>\r\n                                <br />\r\n                                <input\r\n                                    required\r\n                                    name='location'\r\n                                    value={location}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label>\r\n                                    Introduce your favourites languages\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                    type='text'\r\n                                    name='languages'\r\n                                    value={languages}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                <small className='form-text'>\r\n                                    Please use comma separated values (eg.\r\n                                    Spanish, Swedish, Polish)\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-primary btn-clover'\r\n                    >\r\n                        Create\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    { createProfile }\r\n)(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    history,\r\n    getCurrentProfile\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        location: '',\r\n        bio: '',\r\n        languages: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        setFormData({\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            languages:\r\n                loading || !profile.languages ? '' : profile.languages.join(',')\r\n        });\r\n    }, [getCurrentProfile, loading]);\r\n\r\n    const { location, bio, languages } = formData;\r\n\r\n    const onChange = e => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=' container profile-container'>\r\n                <h2>Edit profile</h2>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='row'>\r\n                        <div className='col-6'>\r\n                            <div className='form-group'>\r\n                                <label>Biography</label> <br />\r\n                                <textarea\r\n                                    required\r\n                                    cols='50'\r\n                                    rows='5'\r\n                                    name='bio'\r\n                                    value={bio}\r\n                                    onChange={e => onChange(e)}\r\n                                    className='textarea-profile'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-6'>\r\n                            <div className='form-group'>\r\n                                <label>City where you live</label>\r\n                                <br />\r\n                                <input\r\n                                    required\r\n                                    name='location'\r\n                                    value={location}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label>\r\n                                    Introduce your favourites languages\r\n                                </label>\r\n                                <br />\r\n                                <input\r\n                                    type='text'\r\n                                    name='languages'\r\n                                    value={languages}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                <small className='form-text'>\r\n                                    Please use comma separated values (eg.\r\n                                    Spanish, Swedish, Polish)\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        type='submit'\r\n                        className='btn btn-primary btn-clover'\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                    <Link to={`/dashboard`} className='btn btn-light'>\r\n                        Go back\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    auth: { isAuthenticated, loading },\r\n    ...rest\r\n}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            !isAuthenticated && !loading ? (\r\n                <Redirect to='/' />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    return <Fragment />;\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProfiles }\r\n)(Profiles);\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { takeOffEvent, joinEvent, deleteEvent } from '../../actions/event';\r\n\r\nconst EventItem = ({\r\n    auth,\r\n    takeOffEvent,\r\n    joinEvent,\r\n    deleteEvent,\r\n    event: { _id, title, date, location, language, user, usersAttending }\r\n}) => {\r\n    useEffect(() => {\r\n        getLatLang();\r\n        setViewport({\r\n            ...viewport,\r\n            width: window.innerWidth < 761 ? 300 : 500\r\n        });\r\n    }, []);\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: null,\r\n        height: 230,\r\n        latitude: 37.7577,\r\n        longitude: -122.4376,\r\n        zoom: 13\r\n    });\r\n\r\n    const getLatLang = async () => {\r\n        try {\r\n            const res = await axios.get(`/events/${_id}/latlang`);\r\n            const latLon = [res.data[0].lat, res.data[0].lon];\r\n            setViewport({\r\n                ...viewport,\r\n                latitude: parseFloat(res.data[0].lat),\r\n                longitude: parseFloat(res.data[0].lon)\r\n            });\r\n            return latLon;\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const changeWidth = () => {\r\n        if (window.innerWidth <= 760) {\r\n            setViewport({\r\n                ...viewport,\r\n                width: 250\r\n            });\r\n        } else {\r\n            setViewport({\r\n                ...viewport,\r\n                width: 500\r\n            });\r\n        }\r\n    };\r\n\r\n    const TOKEN =\r\n        'pk.eyJ1IjoiYWRyaXZzIiwiYSI6ImNqbnVmMmJqYjB2cnozcHM1Y2o4dHc4Z3QifQ.FibwG1DRrJ2LTDQfAcy99A';\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-lg-4'>\r\n                        <p>\r\n                            <strong>Title:</strong> {title}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Date: </strong>\r\n                            <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Location:</strong> {location}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Language:</strong> {language}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Users attending:</strong>{' '}\r\n                            {usersAttending.length}\r\n                            {/* {usersAttending.map(u => {\r\n                        return <span>{u.user}</span>;\r\n                    })} */}\r\n                        </p>\r\n                    </div>\r\n                    <div className='col-lg-8 map-div'>\r\n                        <ReactMapGL\r\n                            width={viewport.width}\r\n                            height={viewport.height}\r\n                            latitude={viewport.latitude}\r\n                            longitude={viewport.longitude}\r\n                            zoom={viewport.zoom}\r\n                            mapboxApiAccessToken={TOKEN}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className='attending set-buttons'>\r\n                    <button\r\n                        onClick={e => joinEvent(_id)}\r\n                        className='btn btn-sm btn-clover btn-join'\r\n                    >\r\n                        <span>Join</span>\r\n                    </button>\r\n                    <button\r\n                        onClick={e => takeOffEvent(_id)}\r\n                        className='btn btn-sm btn-clover btn-take-off'\r\n                    >\r\n                        <span>Take off</span>\r\n                    </button>\r\n                </div>\r\n                {!auth.loading && user === auth.user._id && (\r\n                    <button\r\n                        onClick={e => deleteEvent(_id)}\r\n                        className='btn btn-sm btn-danger'\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nEventItem.propTypes = {\r\n    event: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteEvent: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { joinEvent, takeOffEvent, deleteEvent }\r\n)(EventItem);\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport EventItem from './EventItem';\r\nimport { getEvents } from '../../actions/event';\r\n\r\nconst Events = ({ getEvents, event: { events, loading } }) => {\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, []);\r\n\r\n    const [searchedEvent, setEvent] = useState({\r\n        eventFiltered: ''\r\n    });\r\n\r\n    const { eventFiltered } = searchedEvent;\r\n\r\n    // const [IAttend, checkIAttend] = useState({\r\n    //     iAttend: true\r\n    // });\r\n\r\n    // const { iAttend } = IAttend;\r\n\r\n    // const [eventsIAttend, setEventsIAttend] = useState({\r\n    //     eventsIAttend: []\r\n    // });\r\n\r\n    // const handleEventsIAttend = () => {\r\n    //     setEventsIAttend({eventsIAttend: events.filter(ev => ev.usersAttending.includes())});\r\n    // };\r\n\r\n    const handleSearch = e => {\r\n        setEvent({ eventFiltered: e.target.value });\r\n    };\r\n\r\n    // const handleCheckbox = e => {\r\n    //     checkIAttend({ iAttend: !e.target.checked });\r\n    // };\r\n\r\n    let filteredEvents = events.filter(ev => {\r\n        return (\r\n            ev.location.toLowerCase().includes(eventFiltered.toLowerCase()) ||\r\n            ev.language.toLowerCase().includes(eventFiltered.toLowerCase())\r\n        );\r\n    });\r\n\r\n    return loading ? (\r\n        <h2>Loading....</h2>\r\n    ) : (\r\n        <Fragment>\r\n            <div className='container events-container'>\r\n                <div className='row event-search'>\r\n                    <div className='col-lg-2'>\r\n                        <h1 className='large '>Events</h1>\r\n                    </div>\r\n                    <div className='col-lg-3'>\r\n                        <input\r\n                            className='form-control search-events'\r\n                            placeholder='Search...'\r\n                            name='term'\r\n                            value={eventFiltered}\r\n                            onChange={e => handleSearch(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <label>Show events I am attending &nbsp;</label>\r\n                    <input\r\n                        type='checkbox'\r\n                        name='eventsAttending'\r\n                        checked={!iAttend}\r\n                        onChange={e => handleCheckbox(e)}\r\n                    />\r\n                </div> */}\r\n                <div className='events'>\r\n                    {filteredEvents.map(e => {\r\n                        return <EventItem key={e._id} event={e} />;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEvents.propTypes = {\r\n    getEvents: PropTypes.func.isRequired,\r\n    events: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    event: state.event,\r\n    events: state.events // Línea añadida para ver si funciona lo de que cargue del tirón el componente Events.\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getEvents }\r\n)(Events);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    events: [],\r\n    loading: true,\r\n    errors: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: payload,\r\n                loading: false\r\n            };\r\n\r\n        case CLEAR_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                loading: false\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_EVENTS,\r\n    EVENT_ERROR,\r\n    UPDATE_USERS_ATTENDING,\r\n    ADD_EVENT,\r\n    DELETE_EVENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    event: null,\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_EVENTS:\r\n            return {\r\n                ...state,\r\n                events: payload,\r\n                loading: false\r\n            };\r\n        case EVENT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n\r\n        case UPDATE_USERS_ATTENDING:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(event =>\r\n                    event._id === payload.id\r\n                        ? { ...event, usersAttending: payload.usersAttending }\r\n                        : event\r\n                ),\r\n                loading: false\r\n            };\r\n\r\n        case ADD_EVENT:\r\n            return {\r\n                ...state,\r\n                events: payload,\r\n                loading: false\r\n            };\r\n\r\n        case DELETE_EVENT: {\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event._id !== payload),\r\n                loading: false\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport event from './event';\r\n\r\nexport default combineReducers({ alert, auth, profile, event });\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n//Components\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile/CreateProfile';\nimport EditProfile from './components/profile/EditProfile';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile-view/Profile';\nimport Events from './components/events/Events';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport setAuthToken from './utils/setAuthToken';\n\nimport { loadUser } from './actions/auth';\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n    useEffect(() => {\n        store.dispatch(loadUser());\n    }, []);\n\n    return (\n        <Provider store={store}>\n            <Router>\n                <Fragment>\n                    <Navbar />\n                    <Route exact path='/' component={Landing} />\n                    <Alert />\n                    <section>\n                        <Switch>\n                            <Route\n                                exact\n                                path='/register'\n                                component={Register}\n                            />\n                            <Route exact path='/login' component={Login} />\n                            <PrivateRoute\n                                exact\n                                path='/profiles'\n                                component={Profiles}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/profile/:id'\n                                component={Profile}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/dashboard'\n                                component={Dashboard}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/create-profile'\n                                component={CreateProfile}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/edit-profile'\n                                component={EditProfile}\n                            />\n                            <PrivateRoute\n                                exact\n                                path='/events'\n                                component={Events}\n                            />\n                        </Switch>\n                    </section>\n                </Fragment>\n            </Router>\n        </Provider>\n    );\n};\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}